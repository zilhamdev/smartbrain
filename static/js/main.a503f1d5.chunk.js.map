{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.svg","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Footer/Footer.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","signOut","style","display","justifyContent","className","onClick","Logo","options","max","height","width","src","brain","alt","Rank","userName","userEntries","ImageLinkForm","onInputChange","inputValue","onDetect","type","name","onChange","value","FaceRecognition","imgUrl","box","id","map","faceBox","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Footer","year","Date","getFullYear","SignIn","props","event","target","setState","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","emailAddress","password","then","response","json","userData","loadUser","catch","err","console","log","this","htmlFor","Component","Register","onSubmitRegister","e","preventDefault","particlesParams","particles","number","density","enable","value_area","initialState","route","input","user","entries","joined","App","prevState","routeName","calculateFaceLocation","data","image","document","getElementById","Number","outputs","regions","region","region_info","bounding_box","face","index","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a503f1d5.chunk.js","sourcesContent":["export default function Navigation({ onRouteChange, isSignedIn, signOut }) {\n    if (isSignedIn) {\n        return (\n        <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={signOut}>Sign Out</p>\n        </nav>\n        );\n    } else {\n        return (\n            <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <p className=\"f3 link dim black underline pa3 pointer\" onClick={() => onRouteChange(\"signin\")}>Sign In</p>\n                    <p className=\"f3 link dim black underline pa3 pointer\" onClick={() => onRouteChange(\"register\")}>Register</p>\n            </nav>\n        );\n    }\n\n}\n","export default __webpack_public_path__ + \"static/media/brain.e54bb859.svg\";","import \"./Logo.css\";\nimport Tilt from \"react-tilt\";\nimport brain from \"./brain.svg\";\n// import ML from \"./machine-learning.svg\"\n\nexport default function Logo() {\n    return (\n        <div className=\"ma4 mt0\">\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 120, width: 120 }}>\n                <div className=\"Tilt-inner pa3\">\n                    <img src={brain} alt=\"brain logo\" style={{ width: 100}} />\n                </div>\n            </Tilt>\n        </div>\n    );\n}","export default function Rank({ userName, userEntries }) {\n    return (\n        <div>\n            <div className=\"white f3\">\n                {`${userName}, your current entry count is...`}\n            </div>\n            <div className=\"white f1\">\n                {userEntries}\n            </div>\n        </div>\n    )\n}\n","import \"./ImageLinkForm.css\"\n\nexport default function ImageLinkForm({onInputChange, inputValue, onDetect}) {\n    return (\n        <div>\n            <p className=\"f3\">\n                {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n            </p>\n            <div className=\"form center\">\n                <div className=\"center pa4 br3 shadow-5\">\n                    <input className=\"f4 pa2 w-70 center\" type=\"text\" name=\"url\" onChange={onInputChange} value={inputValue} />\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" onClick={onDetect}>Detect</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./FaceRecognition.css\";\n\nexport default function FaceRecognition({ imgUrl, box }) {\n    return (\n        <div className=\"centered ma\">\n            <div className=\"relative mt3\">\n                <img id=\"imageInput\" src={imgUrl} alt=\"\" width=\"500vw\" height=\"auto\" />\n                    {imgUrl && box?\n                    box.map(faceBox => {\n                        return <div key={faceBox.id} className=\"bounding-box\" style={{ top: faceBox.topRow, right: faceBox.rightCol, bottom: faceBox.bottomRow, left: faceBox.leftCol }}></div>\n                    }) : null}\n            </div>\n        </div>\n    )\n}\n\n\n//{/* <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div> */}","export default function Footer() {\n    const year = new Date().getFullYear();\n    return (\n        <footer className=\"pt2\">\n            <p className=\"f6 center black pa3\">&copy; {year} Zilhamdev.</p>\n        </footer>\n    );\n}\n","import { Component } from \"react\";\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailAddress: \"\",\n            password: \"\"\n        }\n    }\n\n    onChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmitSignIn = () => {\n        fetch(\"https://zildev-smartbrain-api.herokuapp.com/signin\", {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                email: this.state.emailAddress,\n                password: this.state.password\n            })\n        })\n            .then(response => response.json())\n            .then(userData => {\n                if (userData.id) {\n                    this.props.loadUser(userData);\n                    this.props.onRouteChange(\"home\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input\n                                    className=\"pa2 input-reset b--black-50 ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\"\n                                    name=\"emailAddress\"\n                                    id=\"email-address\"\n                                    onChange={this.onChange}\n                                    value={this.state.emailAddress}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input\n                                    className=\"b pa2 input-reset b--black-50 ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                />\n                            </div>\n                            {/* <label className=\"pa0 ma0 lh-copy f6 pointer\">\n                                <input type=\"checkbox\" /> Remember me</label> */}\n                        </fieldset>\n                        <div className=\"\">\n                            <input\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Sign in\" onClick={() => {\n                                    // onRouteChange(\"home\")\n                                    this.onSubmitSignIn()\n                                }}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p className=\"f6 link dim black db pointer\" onClick={() => onRouteChange(\"register\")}>Register</p>\n                            {/* <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a> */}\n                        </div>\n                    </div>\n                </main>\n            </article>\n        )\n    }\n}\n","import { Component } from \"react\";\n// ({ onRouteChange })\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            emailAddress: \"\",\n            password: \"\"\n        }\n    }\n\n    onChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmitRegister = () => {\n        fetch(\"https://zildev-smartbrain-api.herokuapp.com/register\", {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                name: this.state.name,\n                email: this.state.emailAddress,\n                password: this.state.password\n            })\n        })\n            .then(response => response.json())\n            .then(userData => {\n                if (userData.id) {\n                    this.props.loadUser(userData);\n                    this.props.onRouteChange(\"home\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <form className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input\n                                    className=\"pa2 input-reset b--black-50 ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input\n                                    className=\"pa2 input-reset b--black-50 ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\"\n                                    name=\"emailAddress\"\n                                    id=\"email-address\"\n                                    onChange={this.onChange}\n                                    value={this.state.emailAddress}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input\n                                    className=\"b pa2 input-reset b--black-50 ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                />\n                            </div>\n                            {/* <label className=\"pa0 ma0 lh-copy f6 pointer\">\n                                <input type=\"checkbox\" /> Remember me</label> */}\n                        </fieldset>\n                        <div className=\"\">\n                            <input\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Register\" onClick={(e) => {\n                                    e.preventDefault();\n                                    this.onSubmitRegister();\n                                }}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p className=\"f6 link dim black db pointer\" onClick={() => this.props.onRouteChange(\"signin\")}>Sign In</p>\n                            {/* <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a> */}\n                        </div>\n                    </form>\n                </main>\n            </article>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport \"./App.css\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Footer from \"./components/Footer/Footer\";\nimport SignIn from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Particles from \"react-particles-js\";\n\n//Particle Module\nconst particlesParams = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n      },\n      value_area: 800\n    }\n  }\n}\n\nconst initialState = {\n  route: \"signin\",\n  isSignedIn: false,\n  input: \"\",\n  imgUrl: \"\",\n  box: {},\n  user: {\n    id: null,\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  signOut = () => {\n    this.setState(initialState);\n  }\n\n  loadUser = (userData) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        user: {\n          id: userData.id,\n          name: userData.name,\n          email: userData.email,\n          entries: userData.entries,\n          joined: userData.joined\n        }\n      }\n    })\n  }\n\n  //Route Change from signin form\n  onRouteChange = (routeName) => {\n    if (routeName !== \"home\") {\n      this.setState({\n        ...initialState,\n        route: routeName\n      });\n    } else if (routeName === \"home\") {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          isSignedIn: true,\n          route: routeName\n        }\n      });\n    }\n  }\n\n  onInputChange = (event) => {\n    const { value } = event.target;\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        input: value,\n        imgUrl: value,\n        box: []\n      }\n    });\n  }\n\n  calculateFaceLocation = (data) => {\n    //check image size\n    const image = document.getElementById(\"imageInput\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    //get face regions bounding box\n    const faceRegions = data.outputs[0].data.regions;\n    const clarifaiFace = faceRegions.map(region => {\n      return region.region_info.bounding_box;\n    })\n    return clarifaiFace.map((face, index) => {\n      return {\n        id: index,\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - (face.right_col * width),\n        bottomRow: height - (face.bottom_row * height)\n      }\n    })\n  }\n\n  displayFaceBox = (box) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        box: box\n      }\n    });\n  }\n\n  onDetect = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        imgUrl: this.state.input\n      }\n    });\n    fetch(\"https://zildev-smartbrain-api.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.imgUrl\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch(\"https://zildev-smartbrain-api.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              //using spread operator\n              // this.setState(prevState => {\n              //   return {\n              //     ...prevState,\n              //     user: {\n              //       ...prevState.user,\n              //       entries: count\n              //     }\n              //   }\n              // }) \n              this.setState(Object.assign(this.state.user, { entries: count })) //using object assign\n            })\n            .catch(err => console.log(err));\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { route, isSignedIn, input, imgUrl, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesParams}\n        />\n        <Navigation isSignedIn={isSignedIn} signOut={this.signOut} onRouteChange={this.onRouteChange} />\n        {route === \"register\" && <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />}\n        {(route === \"signin\" || route === \"signout\") && <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />}\n        {route === \"home\" &&\n          <div>\n            <Logo />\n            <Rank userName={this.state.user.name} userEntries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} inputValue={input} onDetect={this.onDetect} />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n        }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\";\nimport \"tachyons\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}